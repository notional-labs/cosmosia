
#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # fix: could not build optimal types_hash, you should increase either types_hash_max_size: 1024 or types_hash_bucket_size: 64; ignoring types_hash_bucket_size
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;

    resolver 127.0.0.11  valid=30s;   # Docker's DNS server

    include upstream.conf;

    server {
        listen       80;
        server_name  localhost;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location = /basic_status {
            stub_status;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }


        # RPC
        location ~* ^/(?<chain_name>.+)/(.*) {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://upstream_$chain_name:8000/$2$is_args$args;
        }
    }

    ###############################
    # GRPC CONFIG
    ###############################

    # 1. Osmosis
    server {
        listen 9001 http2;
        location / {
            grpc_pass upstream_grpc_osmosis;
        }
    }

   # 2. Starname
    server {
        listen 9002 http2;
        location / {
            grpc_pass upstream_grpc_starname;
        }
    }

    # 3. Regen
    server {
        listen 9003 http2;
        location / {
            grpc_pass upstream_grpc_regen;
        }
    }

    # 4. Akash
    server {
        listen 9004 http2;
        location / {
            grpc_pass upstream_grpc_akash;
        }
    }

    # 5. Gaia
    server {
        listen 9005 http2;
        location / {
            grpc_pass upstream_grpc_cosmoshub;
        }
    }

    # 6. Sentinel
    server {
        listen 9006 http2;
        location / {
            grpc_pass upstream_grpc_sentinel;
        }
    }

    # 7. E-Money
    server {
        listen 9007 http2;
        location / {
            grpc_pass upstream_grpc_emoney;
        }
    }

    # 8. Ixo
    server {
        listen 9008 http2;
        location / {
            grpc_pass upstream_grpc_ixo;
        }
    }

    # 9. Juno
    server {
        listen 9009 http2;
        location / {
            grpc_pass upstream_grpc_juno;
        }
    }

    # 10. Sifchain
    server {
        listen 9010 http2;
        location / {
            grpc_pass upstream_grpc_sifchain;
        }
    }

    # 11. Likecoin
    server {
        listen 9011 http2;
        location / {
            grpc_pass upstream_grpc_likecoin;
        }
    }

    # 12. Ki
    server {
        listen 9012 http2;
        location / {
            grpc_pass upstream_grpc_kichain;
        }
    }

    # 13. Cyber
    server {
        listen 9013 http2;
        location / {
            grpc_pass upstream_grpc_cyber;
        }
    }

    # 14. Cheqd
    server {
        listen 9014 http2;
        location / {
            grpc_pass upstream_grpc_cheqd;
        }
    }

    # 15. Stargaze
    server {
        listen 9015 http2;
        location / {
            grpc_pass upstream_grpc_stargaze;
        }
    }

    # 16. Band
    server {
        listen 9016 http2;
        location / {
            grpc_pass upstream_grpc_bandchain;
        }
    }

    # 17. Chihuahua
    server {
        listen 9017 http2;
        location / {
            grpc_pass upstream_grpc_chihuahua;
        }
    }

    # 18. Kava
    server {
        listen 9018 http2;
        location / {
            grpc_pass upstream_grpc_kava;
        }
    }

    # 19. BitCanna
    server {
        listen 9019 http2;
        location / {
            grpc_pass upstream_grpc_bitcanna;
        }
    }

    # 20. Konstellation
    server {
        listen 9020 http2;
        location / {
            grpc_pass upstream_grpc_konstellation;
        }
    }

    # 21. Omniflix
    server {
        listen 9021 http2;
        location / {
            grpc_pass upstream_grpc_omniflixhub;
        }
    }

    # 22. Terra
    server {
        listen 9022 http2;
        location / {
            grpc_pass upstream_grpc_terra;
        }
    }

    # 23. Vidulum
    server {
        listen 9023 http2;
        location / {
            grpc_pass upstream_grpc_vidulum;
        }
    }

    # 24. Provenance
    server {
        listen 9024 http2;
        location / {
            grpc_pass upstream_grpc_provenance;
        }
    }

    # 25. Dig
    server {
        listen 9025 http2;
        location / {
            grpc_pass upstream_grpc_dig;
        }
    }

    # 26. Gravity-Bridge
    server {
        listen 9026 http2;
        location / {
            grpc_pass upstream_grpc_gravitybridge;
        }
    }
}
