
#user http;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

#    map $status $abnormal {
#        ~^200  0;
#        default 1;
#    }
#
#    log_format  main  '$remote_addr - $remote_user [$time_local] $http_host  "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
#
#    #access_log  logs/access.log  main;
#    access_log /var/log/nginx/access.log main if=$abnormal;
#    # access_log off;
#

    # config to log slow requests only
    log_format  main escape=none  '$request_time "$time_local" $remote_addr "$http_user_agent" $host" $request_uri $request_body';
    map $request_uri $loggable_request
    {
        ~*\/websocket 0;
        default 1;
    }
    map $request_time $loggable
    {
        ~^[0-9]\. 0;
        default $loggable_request;
    }
    access_log  /var/log/nginx/access.log  main if=$loggable;


    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  100;
    #gzip  on;

    # fix timeout
    proxy_connect_timeout       300;
    proxy_send_timeout          300;
    proxy_read_timeout          300;
    send_timeout                300;

    grpc_send_timeout           300;
    grpc_read_timeout           300;

    # fix: could not build optimal types_hash, you should increase either types_hash_max_size: 1024 or types_hash_bucket_size: 64; ignoring types_hash_bucket_size
    types_hash_max_size 4096;
    server_names_hash_bucket_size 512;

    # fix could not build optimal variables_hash, you should increase either variables_hash_max_size: 1024 or variables_hash_bucket_size: 64; ignoring variables_hash_bucket_size
    variables_hash_max_size 4096;

    # fix 413 Payload Too Large
    client_max_body_size 10m;


    resolver 127.0.0.11  valid=30s;   # Docker's DNS server

    include upstream.conf;

    ssl_certificate      fullchain.pem;
    ssl_certificate_key  privkey.pem;
#        ssl_prefer_server_ciphers  on;
    ssl_session_cache shared:le_nginx_SSL:40m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
#        grpc_ssl_certificate cert.pem;
#        grpc_ssl_certificate_key cert.key;
#        grpc_ssl_server_name off;

    server {
        listen 443 ssl;
        http2 on;
        server_name default.internalendpoints.$USE_DOMAIN_NAME;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location = /basic_status {
            stub_status;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    include endpoints.conf;

}
