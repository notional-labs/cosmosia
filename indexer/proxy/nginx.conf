
#user http;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  100;

    #gzip  on;

    # fix: could not build optimal types_hash, you should increase either types_hash_max_size: 1024 or types_hash_bucket_size: 64; ignoring types_hash_bucket_size
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;

    # fix could not build optimal variables_hash, you should increase either variables_hash_max_size: 1024 or variables_hash_bucket_size: 64; ignoring variables_hash_bucket_size
    variables_hash_max_size 4096;

    resolver 127.0.0.11  valid=30s;   # Docker's DNS server

    # include upstream.conf;

    server {
        listen       80;
        server_name  localhost;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location = /basic_status {
            stub_status;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location ~* ^/hasura_juno/(.*) {
            set $target_juno tasks.hasura_juno:8080;
            proxy_pass http://$target_juno/$1$is_args$args;
        }

        location ~* ^/hasura_cosmoshub/(.*) {
            set $target_cosmoshub tasks.hasura_cosmoshub:8080;
            proxy_pass http://$target_cosmoshub/$1$is_args$args;
        }

        location ~* ^/hasura_stargaze/(.*) {
            set $target_stargaze tasks.hasura_stargaze:8080;
            proxy_pass http://$target_stargaze/$1$is_args$args;
        }
    }
}
