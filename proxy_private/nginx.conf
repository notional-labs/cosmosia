
#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    access_log off;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  100;

    #gzip  on;

    # fix: could not build optimal types_hash, you should increase either types_hash_max_size: 1024 or types_hash_bucket_size: 64; ignoring types_hash_bucket_size
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;

    resolver 127.0.0.11  valid=30s;   # Docker's DNS server

    # include upstream.conf;
    include ip_whitelist.conf;
    deny all;

    ssl_certificate      fullchain.pem;
    ssl_certificate_key  privkey.pem;
#        ssl_prefer_server_ciphers  on;
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    #        grpc_ssl_certificate cert.pem;
    #        grpc_ssl_certificate_key cert.key;
    #        grpc_ssl_server_name off;

    server {
        listen 443 ssl;
        server_name ip-whitelist.notional.ventures;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location ~* ^/ip_whitelist/(.*) {
            proxy_pass http://127.0.0.1:5001/$1$is_args$args;
            allow all;
        }

        location = /basic_status {
            stub_status;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # JSON-RPC
        location ~* ^/(?<chain_name>.+)/jsonrpc/(.*) {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://tasks.lb_${chain_name}:8004/$2$is_args$args;
        }

        # WS-JSON-RPC
        location ~* ^/(?<chain_name>.+)/ws-jsonrpc/(.*) {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_read_timeout 100;
            proxy_send_timeout 100;

            proxy_pass http://tasks.lb_${chain_name}:8005/$2$is_args$args;
        }


        # RPC
        location ~* ^/(?<chain_name>.+)/(.*) {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://tasks.lb_${chain_name}:8000/$2$is_args$args;
        }
    }

    ###############################
    # GRPC CONFIG
    ###############################

    # 1. Osmosis
    server {
        listen 9001 ssl http2;
        location / {
            set $target_osmosis tasks.lb_osmosis;
            grpc_pass grpc://$target_osmosis:8003;
        }
    }

   # 2. Starname
    server {
        listen 9002 ssl http2;
        location / {
            set $target_starname tasks.lb_starname;
            grpc_pass grpc://$target_starname:8003;
        }
    }

    # 3. Regen
    server {
        listen 9003 ssl http2;
        location / {
            set $target_regen tasks.lb_regen;
            grpc_pass grpc://$target_regen:8003;
        }
    }

    # 4. Akash
    server {
        listen 9004 ssl http2;
        location / {
            set $target_akash tasks.lb_akash;
            grpc_pass grpc://$target_akash:8003;
        }
    }

    # 5. Gaia
    server {
        listen 9005 ssl http2;
        location / {
            set $target_cosmoshub tasks.lb_cosmoshub;
            grpc_pass grpc://$target_cosmoshub:8003;
        }
    }

    # 6. Sentinel
    server {
        listen 9006 ssl http2;
        location / {
            set $target_sentinel tasks.lb_sentinel;
            grpc_pass grpc://$target_sentinel:8003;
        }
    }

    # 7. E-Money
    server {
        listen 9007 ssl http2;
        location / {
            set $target_emoney tasks.lb_emoney;
            grpc_pass grpc://$target_emoney:8003;
        }
    }

    # 8. Ixo
    server {
        listen 9008 ssl http2;
        location / {
            set $target_ixo tasks.lb_ixo;
            grpc_pass grpc://$target_ixo:8003;
        }
    }

    # 9. Juno
    server {
        listen 9009 ssl http2;
        location / {
            set $target_juno tasks.lb_juno;
            grpc_pass grpc://$target_juno:8003;
        }
    }

    # 10. Sifchain
    server {
        listen 9010 ssl http2;
        location / {
            set $target_sifchain tasks.lb_sifchain;
            grpc_pass grpc://$target_sifchain:8003;
        }
    }

    # 11. Likecoin
    server {
        listen 9011 ssl http2;
        location / {
            set $target_likecoin tasks.lb_likecoin;
            grpc_pass grpc://$target_likecoin:8003;
        }
    }

    # 12. Ki
    server {
        listen 9012 ssl http2;
        location / {
            set $target_kichain tasks.lb_kichain;
            grpc_pass grpc://$target_kichain:8003;
        }
    }

    # 13. Cyber
    server {
        listen 9013 ssl http2;
        location / {
            set $target_cyber tasks.lb_cyber;
            grpc_pass grpc://$target_cyber:8003;
        }
    }

    # 14. Cheqd
    server {
        listen 9014 ssl http2;
        location / {
            set $target_cheqd tasks.lb_cheqd;
            grpc_pass grpc://$target_cheqd:8003;
        }
    }

    # 15. Stargaze
    server {
        listen 9015 ssl http2;
        location / {
            set $target_stargaze tasks.lb_stargaze;
            grpc_pass grpc://$target_stargaze:8003;
        }
    }

    # 16. Band
    server {
        listen 9016 ssl http2;
        location / {
            set $target_bandchain tasks.lb_bandchain;
            grpc_pass grpc://$target_bandchain:8003;
        }
    }

    # 17. Chihuahua
    server {
        listen 9017 ssl http2;
        location / {
            set $target_chihuahua tasks.lb_chihuahua;
            grpc_pass grpc://$target_chihuahua:8003;
        }
    }

    # 18. Kava
    server {
        listen 9018 ssl http2;
        location / {
            set $target_kava tasks.lb_kava;
            grpc_pass grpc://$target_kava:8003;
        }
    }

    # 19. BitCanna
    server {
        listen 9019 ssl http2;
        location / {
            set $target_bitcanna tasks.lb_bitcanna;
            grpc_pass grpc://$target_bitcanna:8003;
        }
    }

    # 20. Konstellation
    server {
        listen 9020 ssl http2;
        location / {
            set $target_konstellation tasks.lb_konstellation;
            grpc_pass grpc://$target_konstellation:8003;
        }
    }

    # 21. Omniflix
    server {
        listen 9021 ssl http2;
        location / {
            set $target_omniflixhub tasks.lb_omniflixhub;
            grpc_pass grpc://$target_omniflixhub:8003;
        }
    }

    # 22. Terra
    server {
        listen 9022 ssl http2;
        location / {
            set $target_terra tasks.lb_terra;
            grpc_pass grpc://$target_terra:8003;
        }
    }

    # 23. Vidulum
    server {
        listen 9023 ssl http2;
        location / {
            set $target_vidulum tasks.lb_vidulum;
            grpc_pass grpc://$target_vidulum:8003;
        }
    }

    # 24. Provenance
    server {
        listen 9024 ssl http2;
        location / {
            set $target_provenance tasks.lb_provenance;
            grpc_pass grpc://$target_provenance:8003;
        }
    }

    # 25. Dig
    server {
        listen 9025 ssl http2;
        location / {
            set $target_dig tasks.lb_dig;
            grpc_pass grpc://$target_dig:8003;
        }
    }

    # 26. Gravity-Bridge
    server {
        listen 9026 ssl http2;
        location / {
            set $target_gravitybridge tasks.lb_gravitybridge;
            grpc_pass grpc://$target_gravitybridge:8003;
        }
    }

    # 27. Comdex
    server {
        listen 9027 ssl http2;
        location / {
            set $target_comdex tasks.lb_comdex;
            grpc_pass grpc://$target_comdex:8003;
        }
    }

    # 28. Cerberus
    server {
        listen 9028 ssl http2;
        location / {
            set $target_cerberus tasks.lb_cerberus;
            grpc_pass grpc://$target_cerberus:8003;
        }
    }

    # 29. BitSong
    server {
        listen 9029 ssl http2;
        location / {
            set $target_bitsong tasks.lb_bitsong;
            grpc_pass grpc://$target_bitsong:8003;
        }
    }

    # 30. AssetMantle
    server {
        listen 9030 ssl http2;
        location / {
            set $target_assetmantle tasks.lb_assetmantle;
            grpc_pass grpc://$target_assetmantle:8003;
        }
    }

    # 31. FetchAI
    server {
        listen 9031 ssl http2;
        location / {
            set $target_fetchhub tasks.lb_fetchhub;
            grpc_pass grpc://$target_fetchhub:8003;
        }
    }

    # 32. Evmos
    server {
        listen 9032 ssl http2;
        location / {
            set $target_evmos tasks.lb_evmos;
            grpc_pass grpc://$target_evmos:8003;
        }
    }

    # 33. Persistence
    server {
        listen 9033 ssl http2;
        location / {
            set $target_persistent tasks.lb_persistent;
            grpc_pass grpc://$target_persistent:8003;
        }
    }

    # 34. Crypto.org
    server {
        listen 9034 ssl http2;
        location / {
            set $target_cryptoorgchain tasks.lb_cryptoorgchain;
            grpc_pass grpc://$target_cryptoorgchain:8003;
        }
    }

    # 35. IRISnet
    server {
        listen 9035 ssl http2;
        location / {
            set $target_irisnet tasks.lb_irisnet;
            grpc_pass grpc://$target_irisnet:8003;
        }
    }

    # 36. Axelar
    server {
        listen 9036 ssl http2;
        location / {
            set $target_axelar tasks.lb_axelar;
            grpc_pass grpc://$target_axelar:8003;
        }
    }

    # 37. Pylons
    server {
        listen 9037 ssl http2;
        location / {
            set $target_pylons tasks.lb_pylons;
            grpc_pass grpc://$target_pylons:8003;
        }
    }

    ###############################
    # REST/API CONFIG
    ###############################

    # 1. Osmosis
    server {
        listen 9101 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_osmosis tasks.lb_osmosis;
            proxy_pass http://$target_osmosis:8001/$1$is_args$args;
        }
    }

   # 2. Starname
    server {
        listen 9102 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_starname tasks.lb_starname;
            proxy_pass http://$target_starname:8001/$1$is_args$args;
        }
    }

    # 3. Regen
    server {
        listen 9103 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_regen tasks.lb_regen;
            proxy_pass http://$target_regen:8001/$1$is_args$args;
        }
    }

    # 4. Akash
    server {
        listen 9104 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_akash tasks.lb_akash;
            proxy_pass http://$target_akash:8001/$1$is_args$args;
        }
    }

    # 5. Gaia
    server {
        listen 9105 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_cosmoshub tasks.lb_cosmoshub;
            proxy_pass http://$target_cosmoshub:8001/$1$is_args$args;
        }
    }

    # 6. Sentinel
    server {
        listen 9106 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_sentinel tasks.lb_sentinel;
            proxy_pass http://$target_sentinel:8001/$1$is_args$args;
        }
    }

    # 7. E-Money
    server {
        listen 9107 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_emoney tasks.lb_emoney;
            proxy_pass http://$target_emoney:8001/$1$is_args$args;
        }
    }

    # 8. Ixo
    server {
        listen 9108 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_ixo tasks.lb_ixo;
            proxy_pass http://$target_ixo:8001/$1$is_args$args;
        }
    }

    # 9. Juno
    server {
        listen 9109 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_juno tasks.lb_juno;
            proxy_pass http://$target_juno:8001/$1$is_args$args;
        }
    }

    # 10. Sifchain
    server {
        listen 9110 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_sifchain tasks.lb_sifchain;
            proxy_pass http://$target_sifchain:8001/$1$is_args$args;
        }
    }

    # 11. Likecoin
    server {
        listen 9111 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_likecoin tasks.lb_likecoin;
            proxy_pass http://$target_likecoin:8001/$1$is_args$args;
        }
    }

    # 12. Ki
    server {
        listen 9112 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_kichain tasks.lb_kichain;
            proxy_pass http://$target_kichain:8001/$1$is_args$args;
        }
    }

    # 13. Cyber
    server {
        listen 9113 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_cyber tasks.lb_cyber;
            proxy_pass http://$target_cyber:8001/$1$is_args$args;
        }
    }

    # 14. Cheqd
    server {
        listen 9114 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_cheqd tasks.lb_cheqd;
            proxy_pass http://$target_cheqd:8001/$1$is_args$args;
        }
    }

    # 15. Stargaze
    server {
        listen 9115 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_stargaze tasks.lb_stargaze;
            proxy_pass http://$target_stargaze:8001/$1$is_args$args;
        }
    }

    # 16. Band
    server {
        listen 9116 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_bandchain tasks.lb_bandchain;
            proxy_pass http://$target_bandchain:8001/$1$is_args$args;
        }
    }

    # 17. Chihuahua
    server {
        listen 9117 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_chihuahua tasks.lb_chihuahua;
            proxy_pass http://$target_chihuahua:8001/$1$is_args$args;
        }
    }

    # 18. Kava
    server {
        listen 9118 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_kava tasks.lb_kava;
            proxy_pass http://$target_kava:8001/$1$is_args$args;
        }
    }

    # 19. BitCanna
    server {
        listen 9119 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_bitcanna tasks.lb_bitcanna;
            proxy_pass http://$target_bitcanna:8001/$1$is_args$args;
        }
    }

    # 20. Konstellation
    server {
        listen 9120 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_konstellation tasks.lb_konstellation;
            proxy_pass http://$target_konstellation:8001/$1$is_args$args;
        }
    }

    # 21. Omniflix
    server {
        listen 9121 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_omniflixhub tasks.lb_omniflixhub;
            proxy_pass http://$target_omniflixhub:8001/$1$is_args$args;
        }
    }

    # 22. Terra
    server {
        listen 9122 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_terra tasks.lb_terra;
            proxy_pass http://$target_terra:8001/$1$is_args$args;
        }
    }

    # 23. Vidulum
    server {
        listen 9123 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_vidulum tasks.lb_vidulum;
            proxy_pass http://$target_vidulum:8001/$1$is_args$args;
        }
    }

    # 24. Provenance
    server {
        listen 9124 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_provenance tasks.lb_provenance;
            proxy_pass http://$target_provenance:8001/$1$is_args$args;
        }
    }

    # 25. Dig
    server {
        listen 9125 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_dig tasks.lb_dig;
            proxy_pass http://$target_dig:8001/$1$is_args$args;
        }
    }

    # 26. Gravity-Bridge
    server {
        listen 9126 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_gravitybridge tasks.lb_gravitybridge;
            proxy_pass http://$target_gravitybridge:8001/$1$is_args$args;
        }
    }

    # 27. Comdex
    server {
        listen 9127 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_comdex tasks.lb_comdex;
            proxy_pass http://$target_comdex:8001/$1$is_args$args;
        }
    }

    # 28. Cerberus
    server {
        listen 9128 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_cerberus tasks.lb_cerberus;
            proxy_pass http://$target_cerberus:8001/$1$is_args$args;
        }
    }

    # 29. BitSong
    server {
        listen 9129 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_bitsong tasks.lb_bitsong;
            proxy_pass http://$target_bitsong:8001/$1$is_args$args;
        }
    }

    # 30. AssetMantle
    server {
        listen 9130 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_assetmantle tasks.lb_assetmantle;
            proxy_pass http://$target_assetmantle:8001/$1$is_args$args;
        }
    }

    # 31. FetchAI
    server {
        listen 9131 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_fetchhub tasks.lb_fetchhub;
            proxy_pass http://$target_fetchhub:8001/$1$is_args$args;
        }
    }

    # 32. Evmos
    server {
        listen 9132 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_evmos tasks.lb_evmos;
            proxy_pass http://$target_evmos:8001/$1$is_args$args;
        }
    }

    # 33. Persistence
    server {
        listen 9133 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_persistent tasks.lb_persistent;
            proxy_pass http://$target_persistent:8001/$1$is_args$args;
        }
    }

    # 34. Crypto.org
    server {
        listen 9134 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_cryptoorgchain tasks.lb_cryptoorgchain;
            proxy_pass http://$target_cryptoorgchain:8001/$1$is_args$args;
        }
    }

    # 35. IRISnet
    server {
        listen 9135 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_irisnet tasks.lb_irisnet;
            proxy_pass http://$target_irisnet:8001/$1$is_args$args;
        }
    }

    # 36. Axelar
    server {
        listen 9136 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_axelar tasks.lb_axelar;
            proxy_pass http://$target_axelar:8001/$1$is_args$args;
        }
    }

    # 37. Pylons
    server {
        listen 9137 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_pylons tasks.lb_pylons;
            proxy_pass http://$target_pylons:8001/$1$is_args$args;
        }
    }

    # 38. Umee
    server {
        listen 9138 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_umee tasks.lb_umee;
            proxy_pass http://$target_umee:8001/$1$is_args$args;
        }
    }

    # 39. Sei-Chain Testnet
    server {
        listen 9139 ssl http2;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location ~* ^/(.*) {
            set $target_sei tasks.lb_sei;
            proxy_pass http://$target_sei:8001/$1$is_args$args;
        }
    }

}
